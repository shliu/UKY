Sample directory for testing (assumes Multilab machines)
CS 441 Fall 2013
December, 2013

.
├── calc3p                  << sample P-code generator for f13-calculator language
├── pstack                  << P-stack machine (api) and additional tools
│   ├── apd
│   ├── api
│   ├── apm
│   └── description.pdf
├── README                 << this file
├── tests
│   ├── test-001.aa
│   ├── test-001b.aa
│   ├── test-001b.calc
│   ├── test-001.calc
│   ├── test-001_expected.out
│   ├── test-002.aa
│   ├── test-002.calc
│   ├── test-002e.calc
│   ├── test-002e_expected.out
│   ├── test-002_expected.out
│   ├── test-01.apm
│   ├── test-01.calc
│   ├── test-01_expected.out
│   ├── test-01int.calc
│   ├── test-01int_expected.out
│   ├── test-1.calc
│   ├── test-1_expected.out
│   ├── test-2.calc
│   ├── test-2_expected.out
│   ├── test-3.calc
│   ├── test-3_expected.out
│   ├── test-42.calc         << an artificial test for test.sh
│   ├── test-42_expected.out
│   ├── test-4.calc
│   ├── test-4_expected.out
│   ├── test-5.calc
│   ├── test-5_expected.out
│   ├── test-6.calc
│   ├── test-6_expected.out
│   ├── test-7.calc
│   └── test-7_expected.out
├── test.sh                  << script to run tests

2 directories, 38 files


Subdirectory "tests" includes pairs of files test.calc and test_expected.out
where test_expected.out is the expected result (output or error messages) when
api is executed on test.apm (P-code binaries) generated with calc3p < test.calc.
Additionally, for selected test cases there are corresponding *.aa (assembly)
and test.apm (binary) files.

The provided set includes  sample tests. Your program may not support the full functionality
and not all features are tested by this set. Also,  error messages generated by your team 
compiler  may differ from messages generated by calc3p.
It is expected that each team will add your own tests for testing all the features.
The grader will use additional test cases.

The command lines for manual execution are:

./calc3p < tests/test.calc  // file calc_out.apm is produced if no errors
./pstack/api calc_out         // executes program test.calc

Additionally available,
./pstack/apd calc_out         //shows P-code for test.calc generated with f13-calc
./pstack/api calc_out -v      //debugging tool for P-code


Run ./test.sh  to test all *.calc programs in "tests" directory.
